{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "description": "Sankey Chart on Modern Slavery Incidents",
    "width": 500,
    "height": 400,
    "padding": {
        "bottom": 20,
        "left": 20,
        "right": 20,
        "top": 20
    },
    "signals": [
        {
            "name": "standardGap",
            "value": 14,
            "description": "Gap as a percentage of full domain"
        },
        {
            "name": "base",
            "value": "center",
            "description": "How to stack(center or zero)"
        }
    ],
    "data": [
        {
            "name": "input",
            "values": [
                {
                    "category": "Companies reporting\nmodern slavery incidents",
                    "stack": 1,
                    "sort": 1,
                    "labels": "left",
                    "labeledValue": 14
                },
                {
                    "category": "Modern slavery",
                    "stack": 2,
                    "sort": 1,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Recruitment fees",
                    "stack": 2,
                    "sort": 2,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Freedom of movement",
                    "stack": 2,
                    "sort": 3,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Wages and benefits",
                    "stack": 2,
                    "sort": 4,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Working Hours",
                    "stack": 2,
                    "sort": 5,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Working conditions",
                    "stack": 2,
                    "sort": 6,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "category": "Other incidents",
                    "stack": 2,
                    "sort": 7,
                    "labels": "left",
                    "gap": 10
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Modern slavery",
                    "description": "Cases that companies qualified as forced or child labour",
                    "value": 14
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Recruitment fees",
                    "description": "Cases of workers paying recruitment or other fees",
                    "value": 29
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Freedom of movement",
                    "description": "Restrictions on freedom of movement workers (e.g. withholding of passports)",
                    "value": 23
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Wages and benefits",
                    "description": "Issues related to wages (underpayment, salary below minimum wages)",
                    "value": 50
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Working Hours",
                    "description": "Cases of excessive or mandatory overtime",
                    "value": 50
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Working conditions",
                    "description": "Issues related to health and safety or cases of harassment",
                    "value": 40
                },
                {
                    "source": "Companies reporting\nmodern slavery incidents",
                    "destination": "Other incidents",
                    "description": "Cases of illegal subcontracting or issues related to general labour practices",
                    "value": 40
                }
            ]
        },
        {
            "name": "stacks",
            "source": "input",
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.source != null"
                },
                {
                    "type": "formula",
                    "as": "end",
                    "expr": "['source','destination']"
                },
                {
                    "type": "formula",
                    "as": "name",
                    "expr": "[ datum.source,datum.destination]"
                },
                {
                    "type": "project",
                    "fields": [
                        "end",
                        "name",
                        "value",
                        "description"
                    ]
                },
                {
                    "type": "flatten",
                    "fields": [
                        "end",
                        "name"
                    ]
                },
                {
                    "type": "lookup",
                    "from": "input",
                    "key": "category",
                    "values": [
                        "stack",
                        "sort",
                        "gap",
                        "labels",
                        "labeledValue"
                    ],
                    "fields": [
                        "name"
                    ],
                    "as": [
                        "stack",
                        "sort",
                        "gap",
                        "labels",
                        "labeledValue"
                    ]
                },
                {
                    "type": "formula",
                    "expr": "datum.stack > 1? datum.description : null",
                    "as": "description"
                },
                {
                    "type": "aggregate",
                    "fields": [
                        "value",
                        "stack",
                        "sort",
                        "gap",
                        "labels"
                    ],
                    "groupby": [
                        "end",
                        "name",
                        "description",
                        "labeledValue"
                    ],
                    "ops": [
                        "sum",
                        "max",
                        "max",
                        "max",
                        "max"
                    ],
                    "as": [
                        "value",
                        "stack",
                        "sort",
                        "gap",
                        "labels"
                    ]
                },
                {
                    "type": "aggregate",
                    "fields": [
                        "value",
                        "stack",
                        "sort",
                        "gap",
                        "labels"
                    ],
                    "groupby": [
                        "name",
                        "description",
                        "labeledValue"
                    ],
                    "ops": [
                        "max",
                        "max",
                        "max",
                        "max",
                        "max"
                    ],
                    "as": [
                        "value",
                        "stack",
                        "sort",
                        "gap",
                        "labels"
                    ]
                },
                {
                    "type": "formula",
                    "as": "gap",
                    "expr": "datum.gap?datum.gap:0"
                },
                {
                    "type": "formula",
                    "as": "labeledValue",
                    "expr": "datum.labeledValue == null?datum.value:datum.labeledValue"
                }
            ]
        },
        {
            "name": "maxValue",
            "source": [
                "stacks"
            ],
            "transform": [
                {
                    "type": "aggregate",
                    "fields": [
                        "value"
                    ],
                    "groupby": [
                        "stack"
                    ],
                    "ops": [
                        "sum"
                    ],
                    "as": [
                        "value"
                    ]
                },
                {
                    "type": "aggregate",
                    "fields": [
                        "value"
                    ],
                    "ops": [
                        "max"
                    ],
                    "as": [
                        "value"
                    ]
                }
            ]
        },
        {
            "name": "plottedStacks",
            "source": [
                "stacks"
            ],
            "transform": [
                {
                    "type": "formula",
                    "as": "spacer",
                    "expr": " (data('maxValue')[0].value/100)*(standardGap+datum.gap)"
                },
                {
                    "type": "formula",
                    "as": "type",
                    "expr": "['data','spacer']"
                },
                {
                    "type": "formula",
                    "as": "spacedValue",
                    "expr": "[datum.value,datum.spacer]"
                },
                {
                    "type": "flatten",
                    "fields": [
                        "type",
                        "spacedValue"
                    ]
                },
                {
                    "type": "stack",
                    "groupby": [
                        "stack"
                    ],
                    "sort": {
                        "field": "sort",
                        "order": "descending"
                    },
                    "field": "spacedValue",
                    "offset": {
                        "signal": "base"
                    }
                },
                {
                    "type": "formula",
                    "expr": "((datum.value)/2)+datum.y0",
                    "as": "yc"
                }
            ]
        },
        {
            "name": "finalTable",
            "source": [
                "plottedStacks"
            ],
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.type == 'data'"
                }
            ]
        },
        {
            "name": "linkTable",
            "source": [
                "input"
            ],
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.source != null"
                },
                {
                    "type": "lookup",
                    "from": "finalTable",
                    "key": "name",
                    "values": [
                        "y0",
                        "y1",
                        "stack",
                        "sort"
                    ],
                    "fields": [
                        "source"
                    ],
                    "as": [
                        "sourceStacky0",
                        "sourceStacky1",
                        "sourceStack",
                        "sourceSort"
                    ]
                },
                {
                    "type": "lookup",
                    "from": "finalTable",
                    "key": "name",
                    "values": [
                        "y0",
                        "y1",
                        "stack",
                        "sort"
                    ],
                    "fields": [
                        "destination"
                    ],
                    "as": [
                        "destinationStacky0",
                        "destinationStacky1",
                        "destinationStack",
                        "destinationSort"
                    ]
                },
                {
                    "type": "stack",
                    "groupby": [
                        "source"
                    ],
                    "sort": {
                        "field": "destinationSort",
                        "order": "descending"
                    },
                    "field": "value",
                    "offset": "zero",
                    "as": [
                        "syi0",
                        "syi1"
                    ]
                },
                {
                    "type": "formula",
                    "expr": "datum.syi0+datum.sourceStacky0",
                    "as": "sy0"
                },
                {
                    "type": "formula",
                    "expr": "datum.sy0+datum.value",
                    "as": "sy1"
                },
                {
                    "type": "stack",
                    "groupby": [
                        "destination"
                    ],
                    "sort": {
                        "field": "sourceSort",
                        "order": "descending"
                    },
                    "field": "value",
                    "offset": "zero",
                    "as": [
                        "dyi0",
                        "dyi1"
                    ]
                },
                {
                    "type": "formula",
                    "expr": "datum.dyi0+datum.destinationStacky0",
                    "as": "dy0"
                },
                {
                    "type": "formula",
                    "expr": "datum.dy0+datum.value",
                    "as": "dy1"
                },
                {
                    "type": "formula",
                    "expr": "((datum.value)/2)+datum.sy0",
                    "as": "syc"
                },
                {
                    "type": "formula",
                    "expr": "((datum.value)/2)+datum.dy0",
                    "as": "dyc"
                },
                {
                    "type": "linkpath",
                    "orient": "horizontal",
                    "shape": "diagonal",
                    "sourceY": {
                        "expr": "scale('y', datum.syc)"
                    },
                    "sourceX": {
                        "expr": "scale('x', toNumber(  datum.sourceStack))+ bandwidth('x')"
                    },
                    "targetY": {
                        "expr": "scale('y', datum.dyc)"
                    },
                    "targetX": {
                        "expr": "scale('x', datum.destinationStack)"
                    }
                },
                {
                    "type": "formula",
                    "expr": "range('y')[0]-scale('y', datum.value)",
                    "as": "strokeWidth"
                }
            ]
        }
    ],
    "scales": [
        {
            "name": "x",
            "type": "band",
            "range": "width",
            "domain": {
                "data": "finalTable",
                "field": "stack"
            },
            "paddingInner": 0.88
        },
        {
            "name": "y",
            "type": "linear",
            "range": "height",
            "domain": {
                "data": "finalTable",
                "field": "y1"
            },
            "reverse": false
        },
        {
            "name": "color",
            "type": "ordinal",
            "range": [
                "#000014", 
                "#00001C", 
                "#000022", 
                "#000029", 
                "#333355", 
                "#666680", 
                "#9999AA"  
            ],
            "domain": {
                "data": "stacks",
                "field": "name"
            }
        }
    ],
    "marks": [
        {
            "type": "rect",
            "from": {
                "data": "finalTable"
            },
            "encode": {
                "update": {
                    "x": {
                        "scale": "x",
                        "field": "stack"
                    },
                    "width": {
                        "scale": "x",
                        "band": 1
                    },
                    "y": {
                        "scale": "y",
                        "field": "y0"
                    },
                    "y2": {
                        "scale": "y",
                        "field": "y1"
                    },
                    "fill": {
                        "scale": "color",
                        "field": "name"
                    },
                    "fillOpacity": {
                        "value": 0.9
                    },
                    "strokeWidth": {
                        "value": 0
                    },
                    "stroke": {
                        "scale": "color",
                        "field": "name"
                    }
                },
                "hover": {
                    "tooltip": {
                        "signal": "datum.stack > 1 ? {'Identified incidents of':datum.name,'Details':datum.description, 'Value':format(datum.value, '') + '%'}:null"
                    },
                    "fillOpacity": {
                        "value": 1
                    }
                }
            }
        },
        {
            "type": "path",
            "name": "links",
            "from": {
                "data": "linkTable"
            },
            "clip": true,
            "encode": {
                "update": {
                    "strokeWidth": {
                        "field": "strokeWidth"
                    },
                    "path": {
                        "field": "path"
                    },
                    "strokeOpacity": {
                        "signal": "0.6"
                    },
                    "stroke": {
                        "field": "destination",
                        "scale": "color"
                    }
                },
                "hover": {
                    "strokeOpacity": {
                        "value": 1
                    },
                    "tooltip": {
                        "signal": "{'Identified incidents of':datum.destination,'Details':datum.description, 'Value':format(datum.value, '') + '%'}"
                    }
                }
            }
        },
        {
            "type": "group",
            "name": "labelText",
            "zindex": 1,
            "from": {
                "facet": {
                    "data": "finalTable",
                    "name": "labelFacet",
                    "groupby": [
                        "name",
                        "stack",
                        "yc",
                        "value",
                        "labels"
                    ]
                }
            },
            "clip": false,
            "encode": {
                "update": {
                    "strokeWidth": {
                        "value": 1
                    },
                    "stroke": {
                        "value": "red"
                    },
                    "x": {
                        "signal": "datum.labels=='left'?scale('x', datum.stack)-8 : scale('x', datum.stack) + (bandwidth('x')) +8"
                    },
                    "yc": {
                        "scale": "y",
                        "signal": "datum.yc"
                    },
                    "width": {
                        "signal": "0"
                    },
                    "height": {
                        "signal": "0"
                    },
                    "fillOpacity": {
                        "signal": "0.1"
                    }
                }
            },
            "marks": [
                {
                    "type": "text",
                    "name": "heading",
                    "from": {
                        "data": "labelFacet"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "value": 0
                            },
                            "y": {
                                "value": -2
                            },
                            "text": {
                                "field": "name"
                            },
                            "lineBreak": {
                                "value": "\n"
                            },
                            "align": {
                                "signal": "datum.labels=='left'?'right':'left'"
                            },
                            "fontWeight": {
                                "value": "500"
                            }
                        }
                    }
                },
                {
                    "type": "text",
                    "name": "amount",
                    "from": {
                        "data": "labelFacet"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "value": 0
                            },
                            "y": {
                                "signal": "datum.stack > 1 ? 17 : 55"
                            },
                            "text": {
                                "signal": "format(datum.labeledValue, '') + '%'"
                            },
                            "align": {
                                "signal": "datum.labels=='left'?'right':'left'"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "rect",
            "from": {
                "data": "labelText"
            },
            "encode": {
                "update": {
                    "x": {
                        "field": "bounds.x1",
                        "offset": -8
                    },
                    "x2": {
                        "field": "bounds.x2",
                        "offset": 8
                    },
                    "y": {
                        "field": "bounds.y1",
                        "offset": -8
                    },
                    "y2": {
                        "field": "bounds.y2",
                        "offset": 8
                    },
                    "fill": {
                        "value": "white"
                    },
                    "opacity": {
                        "value": 0.8
                    },
                    "cornerRadius": {
                        "value": 5
                    }
                }
            }
        }
    ],
    "config": {
        "view": {
            "stroke": "transparent"
        },
        "text": {
            "fontSize": 15,
            "fill": "#333333",
            "font": "Rubik",
            "fontWeight": 400
        }
    }
}